version: "3.9"

services:
  postgres:
    image: postgres:16
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - ${PG_VOL}:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ${APP_NET}

  mongodb:
    image: mongo:7
    container_name: mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    ports:
      - "${MONGO_PORT}:27017"
    volumes:
      - ${MONGO_VOL}:/data/db
    healthcheck:
      test: ["CMD-SHELL", "echo 'db.runCommand({ ping: 1 })' | mongosh -u ${MONGO_INITDB_ROOT_USERNAME} -p ${MONGO_INITDB_ROOT_PASSWORD} --authenticationDatabase admin --quiet"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ${APP_NET}

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.3
    container_name: elasticsearch
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - ES_JAVA_OPTS=-Xms${ES_JAVA_HEAP} -Xmx${ES_JAVA_HEAP}
    ports:
      - "${ELASTIC_PORT}:9200"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ${ES_VOL}:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -s -k -u elastic:${ELASTIC_PASSWORD} https://localhost:9200 >/dev/null || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 10
    networks:
      - ${APP_NET}

networks:
  ${APP_NET}:

volumes:
  ${PG_VOL}:
  ${MONGO_VOL}:
  ${ES_VOL}:
